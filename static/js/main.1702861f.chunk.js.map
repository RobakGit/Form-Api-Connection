{"version":3,"sources":["components/TextField.js","components/FormHelper.js","components/TimeField.js","components/NumberField.js","components/SelectField.js","components/SliderField.js","components/Form.js","components/Alert.js","components/Dish.js","components/Dishs.js","App.js","actions.js","dishsReducer.js","serviceWorker.js","index.js"],"names":["RenderTextField","label","input","meta","touched","invalid","error","TextField","placeholder","variant","helperText","RenderFormHelper","FormHelperText","RenderTimeField","FormControl","id","type","InputLabelProps","shrink","inputProps","step","RenderNumberField","min","RenderSelectField","custom","InputLabel","style","marginLeft","htmlFor","Select","native","RenderSliderField","handleSliderChange","Slider","max","defaultValue","marks","valueLabelDisplay","onChange","Form","props","handleSubmit","pristine","reset","submitting","spicinessExist","typeValue","change","undefined","onSubmit","className","Field","name","component","value","event","newValue","Button","disabled","color","onClick","reduxForm","form","validate","values","errors","forEach","field","no_of_slices","Number","isInteger","parseFloat","selector","formValueSelector","connect","state","didi","push","ErrorAlert","postError","useState","open","setOpen","Collapse","in","Alert","severity","action","IconButton","aria-label","size","fontSize","Dish","preparation_time","diameter","spiciness_scale","slices_of_bread","Grid","container","justify","alignItems","Dishs","dishs","dishArray","map","dish","i","App","this","onSubmitForm","height","Component","dispatch","parseInt","axios","post","JSON","stringify","headers","then","data","payload","catch","message","submitForm","initialStateDishs","Boolean","window","location","hostname","match","require","default","reducer","combineReducers","reduxFormReducer","Object","assign","concat","store","devToolsExtension","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1702861f.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst RenderTextField = ({ label, input, meta: { touched, invalid, error } }) => {\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      placeholder={label}\r\n      variant=\"outlined\"\r\n      error={touched && invalid}\r\n      helperText={touched && error}\r\n      {...input}\r\n    />\r\n  );\r\n}\r\n\r\nexport default RenderTextField;","import React from 'react';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\n\r\nconst RenderFormHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return \"\"\r\n  } \r\n  else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>\r\n  }\r\n}\r\n\r\nexport default RenderFormHelper;","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport RenderFormHelper from './FormHelper'\r\n\r\nconst RenderTimeField = ({ label, input, meta: { touched, invalid, error } }) => (\r\n<FormControl error={touched && error}>\r\n  <TextField\r\n    id=\"time\"\r\n    label={label}\r\n    type=\"time\"\r\n    variant=\"outlined\"\r\n    InputLabelProps={{\r\n      shrink: true,\r\n    }}\r\n    inputProps={{\r\n      step: 2\r\n    }}\r\n    {...input}\r\n  />\r\n  <RenderFormHelper touched={touched} error={error} />\r\n  </FormControl>\r\n)\r\n\r\nexport default RenderTimeField;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst RenderNumberField = ({ label, input, meta: { touched, invalid, error } }) => (\r\n  <TextField\r\n    id=\"standard-number\"\r\n    label={label}\r\n    type=\"number\"\r\n    variant=\"outlined\"\r\n    inputProps={{ min: \"0\" }}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    InputLabelProps={{\r\n      shrink: true,\r\n    }}\r\n    {...input}\r\n  />\r\n)\r\n\r\nexport default RenderNumberField;","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport RenderFormHelper from './FormHelper'\r\n\r\nconst RenderSelectField = ({ input, label, meta: { touched, error }, ...custom }) => (\r\n  <FormControl error={touched && error}>\r\n    <InputLabel style={{marginLeft: \"10px\"}} htmlFor=\"dish-type\">{label}</InputLabel>\r\n    <Select\r\n      native\r\n      {...input}\r\n      {...custom}\r\n      inputProps={{\r\n        id: 'dish-type'\r\n      }}\r\n      variant=\"outlined\"\r\n    >\r\n    </Select>\r\n    <RenderFormHelper touched={touched} error={error} />\r\n  </FormControl>\r\n)\r\n\r\nexport default RenderSelectField;","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n\r\nconst RenderSliderField = ({ label, input, handleSliderChange, meta: { touched, invalid, error }}) => (\r\n  <>\r\n  <InputLabel style={{marginLeft: \"10px\"}} htmlFor=\"dish-type\">{label}</InputLabel>\r\n  <Slider\r\n    min={1}\r\n    max={10}\r\n    defaultValue={1}\r\n    marks\r\n    valueLabelDisplay=\"auto\"\r\n    onChange={handleSliderChange}\r\n  />\r\n  </>\r\n)\r\n\r\nexport default RenderSliderField;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Field, reduxForm, formValueSelector } from 'redux-form'\r\nimport Button from '@material-ui/core/Button'\r\nimport RenderTextField from './TextField'\r\nimport RenderTimeField from './TimeField'\r\nimport RenderNumberField from './NumberField'\r\nimport RenderSelectField from './SelectField'\r\nimport RenderSliderField from './SliderField'\r\n\r\nimport '../App.css';\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  const requiredFields = [\r\n    'name',\r\n    'preparation_time',\r\n    'type',\r\n    'favoriteColor',\r\n    'no_of_slices',\r\n    'diameter',\r\n    'spiciness_scale',\r\n    'slices_of_bread'\r\n  ]\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Required'\r\n    }\r\n  })\r\n  if ( values.no_of_slices && !Number.isInteger(parseFloat(values.no_of_slices)) ) {\r\n    errors.no_of_slices = 'required integer!'\r\n  }\r\n  return errors\r\n}\r\n\r\nlet Form = props => {\r\n  const { handleSubmit, pristine, reset, submitting } = props\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    props.change(\"spiciness_scale\", newValue);\r\n  };\r\n\r\n  if(!props.spicinessExist && props.typeValue === \"soup\"){props.change(\"spiciness_scale\", 1)};\r\n\r\n  if(props.typeValue === \"pizza\"){\r\n    props.change(\"spiciness_scale\", undefined)\r\n    props.change(\"slices_of_bread\", undefined)\r\n  } \r\n  else if (props.typeValue === \"soup\") {\r\n    props.change(\"no_of_slices\", undefined)\r\n    props.change(\"diameter\", undefined)\r\n    props.change(\"slices_of_bread\", undefined)\r\n  }\r\n  else {\r\n    props.change(\"no_of_slices\", undefined)\r\n    props.change(\"diameter\", undefined)\r\n    props.change(\"spiciness_scale\", undefined)\r\n  }\r\n\r\n  return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"elementContainer\">\r\n          <Field\r\n            name=\"name\"\r\n            component={RenderTextField}\r\n            label=\"Dish Name\"\r\n          />\r\n        </div>\r\n        <div className=\"elementContainer\">\r\n          <Field\r\n            name=\"preparation_time\"\r\n            component={RenderTimeField}\r\n            label=\"Preparation Time\"\r\n          />\r\n        </div>\r\n        <div className=\"elementContainer\">\r\n          <Field\r\n            name=\"type\"\r\n            component={RenderSelectField}\r\n            label=\"Dish Type\"\r\n          >\r\n            <option value=\"\" />\r\n            <option value={'pizza'}>Pizza</option>\r\n            <option value={'soup'}>Soup</option>\r\n            <option value={'sandwich'}>Sandwich</option>\r\n          </Field>\r\n        </div>\r\n      \r\n        {props.typeValue === \"pizza\" ? \r\n        <div>\r\n          <div className=\"elementContainer\">\r\n          <Field\r\n            name=\"no_of_slices\"\r\n            component={RenderNumberField}\r\n            label=\"# of slices\"\r\n          />\r\n        </div>\r\n        <div className=\"elementContainer\">\r\n          <Field\r\n            name=\"diameter\"\r\n            component={RenderNumberField}\r\n            inputProps={{ min: \"0\", step: \"0.1\" }}\r\n            label=\"diameter\"\r\n          />\r\n        </div>\r\n        </div> : props.typeValue === \"soup\" ?\r\n        <div className=\"elementContainer\">\r\n        <Field\r\n          name=\"spiciness_scale\"\r\n          component={RenderSliderField}\r\n          label=\"spiciness scale\"\r\n          handleSliderChange={handleSliderChange}\r\n        />\r\n        </div> : props.typeValue === \"sandwich\" ? \r\n        <div className=\"elementContainer\">\r\n        <Field\r\n          name=\"slices_of_bread\"\r\n          component={RenderNumberField}\r\n          label=\"- number of slices of bread required\"\r\n        /> \r\n        </div>: \"\"}\r\n        \r\n        <div className=\"elementContainer\">\r\n          <Button id=\"subBtn\" type=\"submit\" disabled={pristine || submitting} variant=\"contained\" color=\"secondary\">\r\n            Submit\r\n          </Button>\r\n          <Button type=\"button\" disabled={pristine || submitting} variant=\"contained\" onClick={reset}>\r\n            Clear Values\r\n          </Button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nForm = reduxForm({\r\n  form: 'Form', // a unique identifier for this form\r\n  validate\r\n})(Form)\r\n\r\nconst selector = formValueSelector('Form')\r\nForm = connect(\r\n  state => {\r\n    // can select values individually\r\n    //const spicinessValue = selector(state, 'spiciness_scale')\r\n    //let spicinessExist = false;\r\n    //if(spicinessValue){spicinessExist = true;}\r\n    const typeValue = selector(state, 'type')\r\n    let didi = [];\r\n    didi = didi.push(selector(state, 'dish'))\r\n    return {\r\n      typeValue,\r\n      didi\r\n      //spicinessExist\r\n    }\r\n  }\r\n)(Form)\r\n\r\n\r\nexport default Form","import React, {useState} from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst ErrorAlert = ({postError}) => {\r\n  const [open, setOpen] = useState(true);\r\n  return(\r\n  <Collapse className=\"alert\" in={open}>\r\n        <Alert\r\n          severity=\"error\"\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setOpen(false);\r\n              }}\r\n            >\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }\r\n        >\r\n          {postError}\r\n        </Alert>\r\n      </Collapse>\r\n      )\r\n}\r\n\r\nexport default ErrorAlert;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst Dish = ({id, type, name, preparation_time, no_of_slices, diameter, spiciness_scale, slices_of_bread}) => {\r\n\tif(type === \"pizza\"){\r\n\t\treturn (\r\n\t\t\t<Grid\r\n      \tcontainer\r\n      \tjustify=\"center\"\r\n      \talignItems=\"center\"\r\n    \t>\r\n\t\t\t\t<div id={id} className=\"dish\"> \r\n\t\t\t\t\t<p><b>Dish name:</b> {name}</p>\r\n\t\t\t\t\t<p><b>Preparation time:</b> {preparation_time}</p>\r\n\t\t\t\t\t<p><b>Number of slices:</b> {no_of_slices}</p>\r\n\t\t\t\t\t<p><b>Diameter:</b> {diameter}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n\telse if(type === \"soup\"){\r\n\t\treturn (\r\n\t\t\t<Grid\r\n      \tcontainer\r\n      \tjustify=\"center\"\r\n      \talignItems=\"center\"\r\n    \t>\r\n\t\t\t\t<div id={id} className=\"dish\"> \r\n\t\t\t\t\t<p><b>Dish name:</b> {name}</p>\r\n\t\t\t\t\t<p><b>Preparation time:</b> {preparation_time}</p>\r\n\t\t\t\t\t<p><b>Spiciness scale:</b> {spiciness_scale}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n\telse {\r\n\t\treturn (\r\n\t\t\t<Grid\r\n      \tcontainer\r\n      \tjustify=\"center\"\r\n      \talignItems=\"center\"\r\n    \t>\r\n\t\t\t\t<div id={id} className=\"dish\"> \r\n\t\t\t\t\t<p><b>Dish name:</b> {name}</p>\r\n\t\t\t\t\t<p><b>Preparation time:</b> {preparation_time}</p>\r\n\t\t\t\t\t<p><b>Slices of bread:</b> {slices_of_bread}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Dish;","import React from 'react';\r\nimport Dish from './Dish';\r\n\r\nconst Dishs = ({dishs}) => {\r\n\r\nconst dishArray = dishs.map((dish, i) => {\r\n\t\t// if (true) {\r\n\t\t// \tthrow new Error('Błąd!');\r\n\t\t// }\r\n\t\treturn (\r\n\t\t\t<Dish \r\n\t\t\tkey={i} \r\n\t\t\tid={dishs[i].id}\r\n\t\t\ttype={dishs[i].type} \r\n\t\t\tname={dishs[i].name} \r\n\t\t\tpreparation_time={dishs[i].preparation_time}\r\n\t\t\tno_of_slices={dishs[i].no_of_slices}\r\n\t\t\tdiameter={dishs[i].diameter}\r\n\t\t\tspiciness_scale={dishs[i].spiciness_scale}\r\n\t\t\tslices_of_bread={dishs[i].slices_of_bread}\r\n\t\t\t/>\r\n\t\t);\r\n\t})\r\n\r\n\treturn (\r\n\t\t\t\t<div className=\"dishes\"> \r\n\t\t\t\t\t{dishArray}\r\n\t\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Dishs;","import React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport Form from './components/Form';\nimport AlertError from './components/Alert';\nimport Dishs from './components/Dishs';\nimport Grid from '@material-ui/core/Grid'\n\nimport { submitForm } from './actions';\n\nconst mapStateToProps = state => {\n  return {\n    dishs: state.dishs.dishs,\n    error: state.dishs.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSubmitForm: (values) => submitForm(dispatch, values)\n  }\n}\n\nclass App extends Component {\nrender() {  \n  const {dishs, error, onSubmitForm} = this.props\n\n  return (\n    <div className=\"App\">\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{height: \"100%\"}}\n    > \n      {error ? <AlertError postError={error}/> : \"\"}\n      <Form onSubmit={onSubmitForm}/>\n      <Dishs dishs={dishs}/>\n      </Grid>\n    </div>\n  );\n}\n}\n\nApp = connect(mapStateToProps, mapDispatchToProps)(App)\n\nexport default App;\n","import axios from 'axios';\r\n\r\nexport const submitForm = (dispatch, values) => {\r\n\tif(values.slices_of_bread){\r\n    values.slices_of_bread = parseInt(values.slices_of_bread);\r\n  }\r\n  if(values.no_of_slices) {\r\n    values.no_of_slices = parseInt(values.no_of_slices);\r\n    values.diameter = parseFloat(values.diameter);\r\n  }\r\n\taxios.post('https://frosty-wood-6558.getsandbox.com/dishes', JSON.stringify(values), { headers: { 'content-type': 'application/json' }})\r\n\t\t.then(data => dispatch({ type: 'PUSH', payload: data.data}))\r\n\t\t.catch(error => dispatch({ type: 'ERROR', payload: error.message}))\r\n}","const initialStateDishs = {\r\n  dishs: [],\r\n  error: ''\r\n}\r\n\r\nexport default function counter(state = initialStateDishs, action={}) {\r\n  switch (action.type) {\r\n    case 'PUSH':\r\n      return Object.assign({}, state, { dishs: state.dishs.concat(action.payload) })\r\n    case 'ERROR':\r\n      return Object.assign({}, state, { error: action.payload })\r\n    default:\r\n      return state\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\nimport counter from './dishsReducer'\nimport * as serviceWorker from './serviceWorker';\n\nconst App = require('./App').default\n\nconst reducer = combineReducers({\n  form: reduxFormReducer, // mounted under \"form\"\n  dishs: counter\n})\n\nconst store = (window.devToolsExtension\n  ? window.devToolsExtension()(createStore)\n  : createStore)(reducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}